---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bonita-app
  namespace: devops-tools
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: bonita-app
      tiers: backend
  template:
    metadata:
      labels:
        app: bonita-app
        tiers: backend
    spec:
      initContainers:
        - name: install
          image: busybox
          volumeMounts:
          - name: custom-workdir
            mountPath: "/work-dir/bonita.sh"
            subPath: bonita.sh
            readOnly: true
      volumes:
      - name: custom-workdir
        emptyDir: {}
      - name: init-config
        configMap:
          name: initfile
          items:
          - key: bonita.sh
            path: bonita.sh
      containers:
        - name:  bonita-app
          image: bonita:latest
          imagePullPolicy: Always
          env:
            - name: TENANT_LOGIN
              value: daman
            - name: TENANT_PASSWORD
              value: Strike$!
            - name: PLATFORM_LOGIN
              value: pfadmin
            - name: PLATFORM_PASSWORD
              value: pfsecret
#            - name: BONITA_SERVER_LOGGING_FILE
#              value: /etc/logging.properties
          resources:
            requests:
              memory: "100Mi"
              cpu: "100m"
            limits:
              memory: "600Mi"
              cpu: "400m"
          ports:
            - containerPort: 8080
              name: bonita-app
#              "$PWD"/custom_bonita/:/opt/custom-init.d
          volumeMounts:
          - name: custom-workdir
            mountPath: /opt/custom-init.d


#          volumeMounts:
#                - name: log-config
#                  mountPath: /etc/logging.properties
#                  subPath: logging.properties
#                  readOnly: true
#      volumes:
#        - name: log-config
#          configMap:
#            name: logproperties
#            items:
#            - key: logging.properties
#              path: logging.properties
#          readinessProbe:
#            httpGet:
#              path: "/health"
#              port: 80
#            initialDelaySeconds: 30
#            periodSeconds: 5
#            failureThreshold: 5
#          livenessProbe:
#            httpGet:
#              path: "/health"
#              port: 80
#            initialDelaySeconds: 10
#            periodSeconds: 5
#            failureThreshold: 20

---
apiVersion: v1
kind: Service
metadata:
  name: bonita-app
  namespace: devops-tools
spec:
  type: NodePort
  selector:
    app: bonita-app
    tiers: backend
  ports:
    - port: 8080
      targetPort: 8080